{"ast":null,"code":"/*! @azure/msal-common v6.3.0 2022-05-02 */\n'use strict';\n\nimport { __spreadArrays } from '../_virtual/_tslib.js';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\nvar Constants = {\n  LIBRARY_NAME: \"MSAL.JS\",\n  SKU: \"msal.js.common\",\n  // Prefix for all library cache entries\n  CACHE_PREFIX: \"msal\",\n  // default authority\n  DEFAULT_AUTHORITY: \"https://login.microsoftonline.com/common/\",\n  DEFAULT_AUTHORITY_HOST: \"login.microsoftonline.com\",\n  DEFAULT_COMMON_TENANT: \"common\",\n  // ADFS String\n  ADFS: \"adfs\",\n  // Default AAD Instance Discovery Endpoint\n  AAD_INSTANCE_DISCOVERY_ENDPT: \"https://login.microsoftonline.com/common/discovery/instance?api-version=1.1&authorization_endpoint=\",\n  // Resource delimiter - used for certain cache entries\n  RESOURCE_DELIM: \"|\",\n  // Placeholder for non-existent account ids/objects\n  NO_ACCOUNT: \"NO_ACCOUNT\",\n  // Claims\n  CLAIMS: \"claims\",\n  // Consumer UTID\n  CONSUMER_UTID: \"9188040d-6c67-4c5b-b112-36a304b66dad\",\n  // Default scopes\n  OPENID_SCOPE: \"openid\",\n  PROFILE_SCOPE: \"profile\",\n  OFFLINE_ACCESS_SCOPE: \"offline_access\",\n  EMAIL_SCOPE: \"email\",\n  // Default response type for authorization code flow\n  CODE_RESPONSE_TYPE: \"code\",\n  CODE_GRANT_TYPE: \"authorization_code\",\n  RT_GRANT_TYPE: \"refresh_token\",\n  FRAGMENT_RESPONSE_MODE: \"fragment\",\n  S256_CODE_CHALLENGE_METHOD: \"S256\",\n  URL_FORM_CONTENT_TYPE: \"application/x-www-form-urlencoded;charset=utf-8\",\n  AUTHORIZATION_PENDING: \"authorization_pending\",\n  NOT_DEFINED: \"not_defined\",\n  EMPTY_STRING: \"\",\n  FORWARD_SLASH: \"/\",\n  IMDS_ENDPOINT: \"http://169.254.169.254/metadata/instance/compute/location\",\n  IMDS_VERSION: \"2020-06-01\",\n  IMDS_TIMEOUT: 2000,\n  AZURE_REGION_AUTO_DISCOVER_FLAG: \"TryAutoDetect\",\n  REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX: \"login.microsoft.com\",\n  KNOWN_PUBLIC_CLOUDS: [\"login.microsoftonline.com\", \"login.windows.net\", \"login.microsoft.com\", \"sts.windows.net\"],\n  TOKEN_RESPONSE_TYPE: \"token\",\n  ID_TOKEN_RESPONSE_TYPE: \"id_token\"\n};\nvar OIDC_DEFAULT_SCOPES = [Constants.OPENID_SCOPE, Constants.PROFILE_SCOPE, Constants.OFFLINE_ACCESS_SCOPE];\n\nvar OIDC_SCOPES = __spreadArrays(OIDC_DEFAULT_SCOPES, [Constants.EMAIL_SCOPE]);\n/**\r\n * Request header names\r\n */\n\n\nvar HeaderNames = /*#__PURE__*/(function () {\n  (function (HeaderNames) {\n    HeaderNames[\"CONTENT_TYPE\"] = \"Content-Type\";\n    HeaderNames[\"RETRY_AFTER\"] = \"Retry-After\";\n    HeaderNames[\"CCS_HEADER\"] = \"X-AnchorMailbox\";\n    HeaderNames[\"WWWAuthenticate\"] = \"WWW-Authenticate\";\n    HeaderNames[\"AuthenticationInfo\"] = \"Authentication-Info\";\n  })(HeaderNames || (HeaderNames = {}));\n\n  return HeaderNames;\n})();\n\n/**\r\n * Persistent cache keys MSAL which stay while user is logged in.\r\n */\nvar PersistentCacheKeys = /*#__PURE__*/(function () {\n  (function (PersistentCacheKeys) {\n    PersistentCacheKeys[\"ID_TOKEN\"] = \"idtoken\";\n    PersistentCacheKeys[\"CLIENT_INFO\"] = \"client.info\";\n    PersistentCacheKeys[\"ADAL_ID_TOKEN\"] = \"adal.idtoken\";\n    PersistentCacheKeys[\"ERROR\"] = \"error\";\n    PersistentCacheKeys[\"ERROR_DESC\"] = \"error.description\";\n    PersistentCacheKeys[\"ACTIVE_ACCOUNT\"] = \"active-account\";\n  })(PersistentCacheKeys || (PersistentCacheKeys = {}));\n\n  return PersistentCacheKeys;\n})();\n\n/**\r\n * String constants related to AAD Authority\r\n */\nvar AADAuthorityConstants = /*#__PURE__*/(function () {\n  (function (AADAuthorityConstants) {\n    AADAuthorityConstants[\"COMMON\"] = \"common\";\n    AADAuthorityConstants[\"ORGANIZATIONS\"] = \"organizations\";\n    AADAuthorityConstants[\"CONSUMERS\"] = \"consumers\";\n  })(AADAuthorityConstants || (AADAuthorityConstants = {}));\n\n  return AADAuthorityConstants;\n})();\n\n/**\r\n * Keys in the hashParams sent by AAD Server\r\n */\nvar AADServerParamKeys = /*#__PURE__*/(function () {\n  (function (AADServerParamKeys) {\n    AADServerParamKeys[\"CLIENT_ID\"] = \"client_id\";\n    AADServerParamKeys[\"REDIRECT_URI\"] = \"redirect_uri\";\n    AADServerParamKeys[\"RESPONSE_TYPE\"] = \"response_type\";\n    AADServerParamKeys[\"RESPONSE_MODE\"] = \"response_mode\";\n    AADServerParamKeys[\"GRANT_TYPE\"] = \"grant_type\";\n    AADServerParamKeys[\"CLAIMS\"] = \"claims\";\n    AADServerParamKeys[\"SCOPE\"] = \"scope\";\n    AADServerParamKeys[\"ERROR\"] = \"error\";\n    AADServerParamKeys[\"ERROR_DESCRIPTION\"] = \"error_description\";\n    AADServerParamKeys[\"ACCESS_TOKEN\"] = \"access_token\";\n    AADServerParamKeys[\"ID_TOKEN\"] = \"id_token\";\n    AADServerParamKeys[\"REFRESH_TOKEN\"] = \"refresh_token\";\n    AADServerParamKeys[\"EXPIRES_IN\"] = \"expires_in\";\n    AADServerParamKeys[\"STATE\"] = \"state\";\n    AADServerParamKeys[\"NONCE\"] = \"nonce\";\n    AADServerParamKeys[\"PROMPT\"] = \"prompt\";\n    AADServerParamKeys[\"SESSION_STATE\"] = \"session_state\";\n    AADServerParamKeys[\"CLIENT_INFO\"] = \"client_info\";\n    AADServerParamKeys[\"CODE\"] = \"code\";\n    AADServerParamKeys[\"CODE_CHALLENGE\"] = \"code_challenge\";\n    AADServerParamKeys[\"CODE_CHALLENGE_METHOD\"] = \"code_challenge_method\";\n    AADServerParamKeys[\"CODE_VERIFIER\"] = \"code_verifier\";\n    AADServerParamKeys[\"CLIENT_REQUEST_ID\"] = \"client-request-id\";\n    AADServerParamKeys[\"X_CLIENT_SKU\"] = \"x-client-SKU\";\n    AADServerParamKeys[\"X_CLIENT_VER\"] = \"x-client-VER\";\n    AADServerParamKeys[\"X_CLIENT_OS\"] = \"x-client-OS\";\n    AADServerParamKeys[\"X_CLIENT_CPU\"] = \"x-client-CPU\";\n    AADServerParamKeys[\"X_CLIENT_CURR_TELEM\"] = \"x-client-current-telemetry\";\n    AADServerParamKeys[\"X_CLIENT_LAST_TELEM\"] = \"x-client-last-telemetry\";\n    AADServerParamKeys[\"X_MS_LIB_CAPABILITY\"] = \"x-ms-lib-capability\";\n    AADServerParamKeys[\"X_APP_NAME\"] = \"x-app-name\";\n    AADServerParamKeys[\"X_APP_VER\"] = \"x-app-ver\";\n    AADServerParamKeys[\"POST_LOGOUT_URI\"] = \"post_logout_redirect_uri\";\n    AADServerParamKeys[\"ID_TOKEN_HINT\"] = \"id_token_hint\";\n    AADServerParamKeys[\"DEVICE_CODE\"] = \"device_code\";\n    AADServerParamKeys[\"CLIENT_SECRET\"] = \"client_secret\";\n    AADServerParamKeys[\"CLIENT_ASSERTION\"] = \"client_assertion\";\n    AADServerParamKeys[\"CLIENT_ASSERTION_TYPE\"] = \"client_assertion_type\";\n    AADServerParamKeys[\"TOKEN_TYPE\"] = \"token_type\";\n    AADServerParamKeys[\"REQ_CNF\"] = \"req_cnf\";\n    AADServerParamKeys[\"OBO_ASSERTION\"] = \"assertion\";\n    AADServerParamKeys[\"REQUESTED_TOKEN_USE\"] = \"requested_token_use\";\n    AADServerParamKeys[\"ON_BEHALF_OF\"] = \"on_behalf_of\";\n    AADServerParamKeys[\"FOCI\"] = \"foci\";\n    AADServerParamKeys[\"CCS_HEADER\"] = \"X-AnchorMailbox\";\n    AADServerParamKeys[\"RETURN_SPA_CODE\"] = \"return_spa_code\";\n    AADServerParamKeys[\"NATIVE_BROKER\"] = \"nativebroker\";\n    AADServerParamKeys[\"LOGOUT_HINT\"] = \"logout_hint\";\n  })(AADServerParamKeys || (AADServerParamKeys = {}));\n\n  return AADServerParamKeys;\n})();\n\n/**\r\n * Claims request keys\r\n */\nvar ClaimsRequestKeys = /*#__PURE__*/(function () {\n  (function (ClaimsRequestKeys) {\n    ClaimsRequestKeys[\"ACCESS_TOKEN\"] = \"access_token\";\n    ClaimsRequestKeys[\"XMS_CC\"] = \"xms_cc\";\n  })(ClaimsRequestKeys || (ClaimsRequestKeys = {}));\n\n  return ClaimsRequestKeys;\n})();\n\n/**\r\n * we considered making this \"enum\" in the request instead of string, however it looks like the allowed list of\r\n * prompt values kept changing over past couple of years. There are some undocumented prompt values for some\r\n * internal partners too, hence the choice of generic \"string\" type instead of the \"enum\"\r\n */\nvar PromptValue = {\n  LOGIN: \"login\",\n  SELECT_ACCOUNT: \"select_account\",\n  CONSENT: \"consent\",\n  NONE: \"none\",\n  CREATE: \"create\"\n};\n/**\r\n * SSO Types - generated to populate hints\r\n */\n\nvar SSOTypes = /*#__PURE__*/(function () {\n  (function (SSOTypes) {\n    SSOTypes[\"ACCOUNT\"] = \"account\";\n    SSOTypes[\"SID\"] = \"sid\";\n    SSOTypes[\"LOGIN_HINT\"] = \"login_hint\";\n    SSOTypes[\"ID_TOKEN\"] = \"id_token\";\n    SSOTypes[\"DOMAIN_HINT\"] = \"domain_hint\";\n    SSOTypes[\"ORGANIZATIONS\"] = \"organizations\";\n    SSOTypes[\"CONSUMERS\"] = \"consumers\";\n    SSOTypes[\"ACCOUNT_ID\"] = \"accountIdentifier\";\n    SSOTypes[\"HOMEACCOUNT_ID\"] = \"homeAccountIdentifier\";\n  })(SSOTypes || (SSOTypes = {}));\n\n  return SSOTypes;\n})();\n\n/**\r\n * allowed values for codeVerifier\r\n */\nvar CodeChallengeMethodValues = {\n  PLAIN: \"plain\",\n  S256: \"S256\"\n};\n/**\r\n * allowed values for response_mode\r\n */\n\nvar ResponseMode = /*#__PURE__*/(function () {\n  (function (ResponseMode) {\n    ResponseMode[\"QUERY\"] = \"query\";\n    ResponseMode[\"FRAGMENT\"] = \"fragment\";\n    ResponseMode[\"FORM_POST\"] = \"form_post\";\n  })(ResponseMode || (ResponseMode = {}));\n\n  return ResponseMode;\n})();\n\n/**\r\n * allowed grant_type\r\n */\nvar GrantType = /*#__PURE__*/(function () {\n  (function (GrantType) {\n    GrantType[\"IMPLICIT_GRANT\"] = \"implicit\";\n    GrantType[\"AUTHORIZATION_CODE_GRANT\"] = \"authorization_code\";\n    GrantType[\"CLIENT_CREDENTIALS_GRANT\"] = \"client_credentials\";\n    GrantType[\"RESOURCE_OWNER_PASSWORD_GRANT\"] = \"password\";\n    GrantType[\"REFRESH_TOKEN_GRANT\"] = \"refresh_token\";\n    GrantType[\"DEVICE_CODE_GRANT\"] = \"device_code\";\n    GrantType[\"JWT_BEARER\"] = \"urn:ietf:params:oauth:grant-type:jwt-bearer\";\n  })(GrantType || (GrantType = {}));\n\n  return GrantType;\n})();\n\n/**\r\n * Account types in Cache\r\n */\nvar CacheAccountType = /*#__PURE__*/(function () {\n  (function (CacheAccountType) {\n    CacheAccountType[\"MSSTS_ACCOUNT_TYPE\"] = \"MSSTS\";\n    CacheAccountType[\"ADFS_ACCOUNT_TYPE\"] = \"ADFS\";\n    CacheAccountType[\"MSAV1_ACCOUNT_TYPE\"] = \"MSA\";\n    CacheAccountType[\"GENERIC_ACCOUNT_TYPE\"] = \"Generic\"; // NTLM, Kerberos, FBA, Basic etc\n  })(CacheAccountType || (CacheAccountType = {}));\n\n  return CacheAccountType;\n})();\n\n/**\r\n * Separators used in cache\r\n */\nvar Separators = /*#__PURE__*/(function () {\n  (function (Separators) {\n    Separators[\"CACHE_KEY_SEPARATOR\"] = \"-\";\n    Separators[\"CLIENT_INFO_SEPARATOR\"] = \".\";\n  })(Separators || (Separators = {}));\n\n  return Separators;\n})();\n\n/**\r\n * Credential Type stored in the cache\r\n */\nvar CredentialType = /*#__PURE__*/(function () {\n  (function (CredentialType) {\n    CredentialType[\"ID_TOKEN\"] = \"IdToken\";\n    CredentialType[\"ACCESS_TOKEN\"] = \"AccessToken\";\n    CredentialType[\"ACCESS_TOKEN_WITH_AUTH_SCHEME\"] = \"AccessToken_With_AuthScheme\";\n    CredentialType[\"REFRESH_TOKEN\"] = \"RefreshToken\";\n  })(CredentialType || (CredentialType = {}));\n\n  return CredentialType;\n})();\n\n/**\r\n * Credential Type stored in the cache\r\n */\nvar CacheSchemaType = /*#__PURE__*/(function () {\n  (function (CacheSchemaType) {\n    CacheSchemaType[\"ACCOUNT\"] = \"Account\";\n    CacheSchemaType[\"CREDENTIAL\"] = \"Credential\";\n    CacheSchemaType[\"ID_TOKEN\"] = \"IdToken\";\n    CacheSchemaType[\"ACCESS_TOKEN\"] = \"AccessToken\";\n    CacheSchemaType[\"REFRESH_TOKEN\"] = \"RefreshToken\";\n    CacheSchemaType[\"APP_METADATA\"] = \"AppMetadata\";\n    CacheSchemaType[\"TEMPORARY\"] = \"TempCache\";\n    CacheSchemaType[\"TELEMETRY\"] = \"Telemetry\";\n    CacheSchemaType[\"UNDEFINED\"] = \"Undefined\";\n    CacheSchemaType[\"THROTTLING\"] = \"Throttling\";\n  })(CacheSchemaType || (CacheSchemaType = {}));\n\n  return CacheSchemaType;\n})();\n\n/**\r\n * Combine all cache types\r\n */\nvar CacheType = /*#__PURE__*/(function () {\n  (function (CacheType) {\n    CacheType[CacheType[\"ADFS\"] = 1001] = \"ADFS\";\n    CacheType[CacheType[\"MSA\"] = 1002] = \"MSA\";\n    CacheType[CacheType[\"MSSTS\"] = 1003] = \"MSSTS\";\n    CacheType[CacheType[\"GENERIC\"] = 1004] = \"GENERIC\";\n    CacheType[CacheType[\"ACCESS_TOKEN\"] = 2001] = \"ACCESS_TOKEN\";\n    CacheType[CacheType[\"REFRESH_TOKEN\"] = 2002] = \"REFRESH_TOKEN\";\n    CacheType[CacheType[\"ID_TOKEN\"] = 2003] = \"ID_TOKEN\";\n    CacheType[CacheType[\"APP_METADATA\"] = 3001] = \"APP_METADATA\";\n    CacheType[CacheType[\"UNDEFINED\"] = 9999] = \"UNDEFINED\";\n  })(CacheType || (CacheType = {}));\n\n  return CacheType;\n})();\n\n/**\r\n * More Cache related constants\r\n */\nvar APP_METADATA = \"appmetadata\";\nvar CLIENT_INFO = \"client_info\";\nvar THE_FAMILY_ID = \"1\";\nvar AUTHORITY_METADATA_CONSTANTS = {\n  CACHE_KEY: \"authority-metadata\",\n  REFRESH_TIME_SECONDS: 3600 * 24 // 24 Hours\n\n};\nvar AuthorityMetadataSource = /*#__PURE__*/(function () {\n  (function (AuthorityMetadataSource) {\n    AuthorityMetadataSource[\"CONFIG\"] = \"config\";\n    AuthorityMetadataSource[\"CACHE\"] = \"cache\";\n    AuthorityMetadataSource[\"NETWORK\"] = \"network\";\n  })(AuthorityMetadataSource || (AuthorityMetadataSource = {}));\n\n  return AuthorityMetadataSource;\n})();\nvar SERVER_TELEM_CONSTANTS = {\n  SCHEMA_VERSION: 5,\n  MAX_CUR_HEADER_BYTES: 80,\n  MAX_LAST_HEADER_BYTES: 330,\n  MAX_CACHED_ERRORS: 50,\n  CACHE_KEY: \"server-telemetry\",\n  CATEGORY_SEPARATOR: \"|\",\n  VALUE_SEPARATOR: \",\",\n  OVERFLOW_TRUE: \"1\",\n  OVERFLOW_FALSE: \"0\",\n  UNKNOWN_ERROR: \"unknown_error\"\n};\n/**\r\n * Type of the authentication request\r\n */\n\nvar AuthenticationScheme = /*#__PURE__*/(function () {\n  (function (AuthenticationScheme) {\n    AuthenticationScheme[\"BEARER\"] = \"Bearer\";\n    AuthenticationScheme[\"POP\"] = \"pop\";\n    AuthenticationScheme[\"SSH\"] = \"ssh-cert\";\n  })(AuthenticationScheme || (AuthenticationScheme = {}));\n\n  return AuthenticationScheme;\n})();\n\n/**\r\n * Constants related to throttling\r\n */\nvar ThrottlingConstants = {\n  // Default time to throttle RequestThumbprint in seconds\n  DEFAULT_THROTTLE_TIME_SECONDS: 60,\n  // Default maximum time to throttle in seconds, overrides what the server sends back\n  DEFAULT_MAX_THROTTLE_TIME_SECONDS: 3600,\n  // Prefix for storing throttling entries\n  THROTTLING_PREFIX: \"throttling\",\n  // Value assigned to the x-ms-lib-capability header to indicate to the server the library supports throttling\n  X_MS_LIB_CAPABILITY_VALUE: \"retry-after, h429\"\n};\nvar Errors = {\n  INVALID_GRANT_ERROR: \"invalid_grant\",\n  CLIENT_MISMATCH_ERROR: \"client_mismatch\"\n};\n/**\r\n * Password grant parameters\r\n */\n\nvar PasswordGrantConstants = /*#__PURE__*/(function () {\n  (function (PasswordGrantConstants) {\n    PasswordGrantConstants[\"username\"] = \"username\";\n    PasswordGrantConstants[\"password\"] = \"password\";\n  })(PasswordGrantConstants || (PasswordGrantConstants = {}));\n\n  return PasswordGrantConstants;\n})();\n\n/**\r\n * Response codes\r\n */\nvar ResponseCodes = /*#__PURE__*/(function () {\n  (function (ResponseCodes) {\n    ResponseCodes[ResponseCodes[\"httpSuccess\"] = 200] = \"httpSuccess\";\n    ResponseCodes[ResponseCodes[\"httpBadRequest\"] = 400] = \"httpBadRequest\";\n  })(ResponseCodes || (ResponseCodes = {}));\n\n  return ResponseCodes;\n})();\n\n/**\r\n * Region Discovery Sources\r\n */\nvar RegionDiscoverySources = /*#__PURE__*/(function () {\n  (function (RegionDiscoverySources) {\n    RegionDiscoverySources[\"FAILED_AUTO_DETECTION\"] = \"1\";\n    RegionDiscoverySources[\"INTERNAL_CACHE\"] = \"2\";\n    RegionDiscoverySources[\"ENVIRONMENT_VARIABLE\"] = \"3\";\n    RegionDiscoverySources[\"IMDS\"] = \"4\";\n  })(RegionDiscoverySources || (RegionDiscoverySources = {}));\n\n  return RegionDiscoverySources;\n})();\n\n/**\r\n * Region Discovery Outcomes\r\n */\nvar RegionDiscoveryOutcomes = /*#__PURE__*/(function () {\n  (function (RegionDiscoveryOutcomes) {\n    RegionDiscoveryOutcomes[\"CONFIGURED_MATCHES_DETECTED\"] = \"1\";\n    RegionDiscoveryOutcomes[\"CONFIGURED_NO_AUTO_DETECTION\"] = \"2\";\n    RegionDiscoveryOutcomes[\"CONFIGURED_NOT_DETECTED\"] = \"3\";\n    RegionDiscoveryOutcomes[\"AUTO_DETECTION_REQUESTED_SUCCESSFUL\"] = \"4\";\n    RegionDiscoveryOutcomes[\"AUTO_DETECTION_REQUESTED_FAILED\"] = \"5\";\n  })(RegionDiscoveryOutcomes || (RegionDiscoveryOutcomes = {}));\n\n  return RegionDiscoveryOutcomes;\n})();\nvar CacheOutcome = /*#__PURE__*/(function () {\n  (function (CacheOutcome) {\n    CacheOutcome[\"NO_CACHE_HIT\"] = \"0\";\n    CacheOutcome[\"FORCE_REFRESH\"] = \"1\";\n    CacheOutcome[\"NO_CACHED_ACCESS_TOKEN\"] = \"2\";\n    CacheOutcome[\"CACHED_ACCESS_TOKEN_EXPIRED\"] = \"3\";\n    CacheOutcome[\"REFRESH_CACHED_ACCESS_TOKEN\"] = \"4\";\n  })(CacheOutcome || (CacheOutcome = {}));\n\n  return CacheOutcome;\n})();\nexport { AADAuthorityConstants, AADServerParamKeys, APP_METADATA, AUTHORITY_METADATA_CONSTANTS, AuthenticationScheme, AuthorityMetadataSource, CLIENT_INFO, CacheAccountType, CacheOutcome, CacheSchemaType, CacheType, ClaimsRequestKeys, CodeChallengeMethodValues, Constants, CredentialType, Errors, GrantType, HeaderNames, OIDC_DEFAULT_SCOPES, OIDC_SCOPES, PasswordGrantConstants, PersistentCacheKeys, PromptValue, RegionDiscoveryOutcomes, RegionDiscoverySources, ResponseCodes, ResponseMode, SERVER_TELEM_CONSTANTS, SSOTypes, Separators, THE_FAMILY_ID, ThrottlingConstants }; //# sourceMappingURL=Constants.js.map","map":null,"metadata":{},"sourceType":"module"}