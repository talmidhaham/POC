{"ast":null,"code":"/*! @azure/msal-browser v2.24.0 2022-05-02 */\n'use strict';\n\nimport { BrowserConfigurationAuthError } from '../error/BrowserConfigurationAuthError.js';\nimport { BrowserCacheLocation } from '../utils/BrowserConstants.js';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\nvar BrowserStorage =\n/** @class */\nfunction () {\n  function BrowserStorage(cacheLocation) {\n    this.validateWindowStorage(cacheLocation);\n    this.windowStorage = window[cacheLocation];\n  }\n\n  BrowserStorage.prototype.validateWindowStorage = function (cacheLocation) {\n    if (cacheLocation !== BrowserCacheLocation.LocalStorage && cacheLocation !== BrowserCacheLocation.SessionStorage) {\n      throw BrowserConfigurationAuthError.createStorageNotSupportedError(cacheLocation);\n    }\n\n    var storageSupported = !!window[cacheLocation];\n\n    if (!storageSupported) {\n      throw BrowserConfigurationAuthError.createStorageNotSupportedError(cacheLocation);\n    }\n  };\n\n  BrowserStorage.prototype.getItem = function (key) {\n    return this.windowStorage.getItem(key);\n  };\n\n  BrowserStorage.prototype.setItem = function (key, value) {\n    this.windowStorage.setItem(key, value);\n  };\n\n  BrowserStorage.prototype.removeItem = function (key) {\n    this.windowStorage.removeItem(key);\n  };\n\n  BrowserStorage.prototype.getKeys = function () {\n    return Object.keys(this.windowStorage);\n  };\n\n  BrowserStorage.prototype.containsKey = function (key) {\n    return this.windowStorage.hasOwnProperty(key);\n  };\n\n  return BrowserStorage;\n}();\n\nexport { BrowserStorage }; //# sourceMappingURL=BrowserStorage.js.map","map":null,"metadata":{},"sourceType":"module"}