{"ast":null,"code":"import _createClass from \"D:\\\\Git\\\\ANGULAR\\\\B2C\\\\POC\\\\2-call-api-b2c\\\\SPA\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport _classCallCheck from \"D:\\\\Git\\\\ANGULAR\\\\B2C\\\\POC\\\\2-call-api-b2c\\\\SPA\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatListModule } from '@angular/material/list';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TodoService } from './todo.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { PublicClientApplication, InteractionType } from '@azure/msal-browser';\nimport { MsalRedirectComponent } from '@azure/msal-angular';\nimport { msalConfig, loginRequest, protectedResources } from './auth-config';\nimport { MsalConfigDynamicModule } from './Shared/msal-config-dynamic/msal-config-dynamic.module';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./Shared/msal-config-dynamic/msal-config-dynamic.module\";\n/**\r\n * Here we pass the configuration parameters to create an MSAL instance.\r\n * For more info, visit: https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-angular/docs/v2-docs/configuration.md\r\n */\n\nexport function MSALInstanceFactory() {\n  return new PublicClientApplication(msalConfig);\n}\n/**\r\n * MSAL Angular will automatically retrieve tokens for resources\r\n * added to protectedResourceMap. For more info, visit:\r\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-angular/docs/v2-docs/initialization.md#get-tokens-for-web-api-calls\r\n */\n\nexport function MSALInterceptorConfigFactory() {\n  var protectedResourceMap = new Map();\n  protectedResourceMap.set(protectedResources.todoListApi.endpoint, protectedResources.todoListApi.scopes);\n  return {\n    interactionType: InteractionType.Redirect,\n    protectedResourceMap: protectedResourceMap\n  };\n}\n/**\r\n * Set your default interaction type for MSALGuard here. If you have any\r\n * additional scopes you want the user to consent upon login, add them here as well.\r\n */\n\nexport function MSALGuardConfigFactory() {\n  return {\n    interactionType: InteractionType.Redirect,\n    authRequest: loginRequest\n  };\n}\nexport var AppModule = /*#__PURE__*/(function () {\n  var AppModule = /*#__PURE__*/_createClass(function AppModule() {\n    _classCallCheck(this, AppModule);\n  });\n\n  AppModule.ɵfac = function AppModule_Factory(t) {\n    return new (t || AppModule)();\n  };\n\n  AppModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppModule,\n    bootstrap: [AppComponent, MsalRedirectComponent]\n  });\n  AppModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [// {\n    //   provide: HTTP_INTERCEPTORS,\n    //   useClass: MsalInterceptor,\n    //   multi: true\n    // },\n    // {\n    //   provide: MSAL_INSTANCE,\n    //   useFactory: MSALInstanceFactory\n    // },\n    // {\n    //   provide: MSAL_GUARD_CONFIG,\n    //   useFactory: MSALGuardConfigFactory\n    // },\n    // {\n    //   provide: MSAL_INTERCEPTOR_CONFIG,\n    //   useFactory: MSALInterceptorConfigFactory\n    // },\n    // MsalService,\n    // MsalGuard,\n    // MsalBroadcastService,\n    TodoService],\n    imports: [[BrowserModule, BrowserAnimationsModule, AppRoutingModule, MatButtonModule, MatToolbarModule, MatListModule, MatTableModule, MatCardModule, MatInputModule, MatFormFieldModule, MatCheckboxModule, MatIconModule, HttpClientModule, FormsModule, //    MsalModule\n    MsalConfigDynamicModule.forRoot('assets/Config/MsalConfig.json')]]\n  });\n  return AppModule;\n})();","map":null,"metadata":{},"sourceType":"module"}