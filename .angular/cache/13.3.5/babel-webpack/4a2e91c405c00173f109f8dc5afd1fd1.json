{"ast":null,"code":"import _classCallCheck from \"D:\\\\Git\\\\ANGULAR\\\\B2C\\\\POC\\\\2-call-api-b2c\\\\SPA\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"D:\\\\Git\\\\ANGULAR\\\\B2C\\\\POC\\\\2-call-api-b2c\\\\SPA\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { EventType, InteractionStatus } from '@azure/msal-browser';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@azure/msal-angular\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/card\";\nimport * as i4 from \"@angular/material/table\";\n\nfunction HomeComponent_mat_card_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-card\", 2)(1, \"mat-card-title\");\n    i0.ɵɵtext(2, \"Angular single-page application built with MSAL Angular\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"mat-card-subtitle\");\n    i0.ɵɵtext(4, \"Sign-in with Azure AD B2C and call a protected web API\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"mat-card-content\");\n    i0.ɵɵtext(6, \"This sample demonstrates how to configure MSAL Angular to sign-in, sign-out and acquire an access token for a protected web API\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction HomeComponent_table_1_th_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 10);\n    i0.ɵɵtext(1, \" Claim \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction HomeComponent_table_1_td_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var element_r8 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r8.claim, \" \");\n  }\n}\n\nfunction HomeComponent_table_1_th_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 10);\n    i0.ɵɵtext(1, \" Value \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction HomeComponent_table_1_td_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var element_r9 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r9.value, \" \");\n  }\n}\n\nfunction HomeComponent_table_1_tr_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 12);\n  }\n}\n\nfunction HomeComponent_table_1_tr_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 13);\n  }\n}\n\nfunction HomeComponent_table_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 3);\n    i0.ɵɵelementContainerStart(1, 4);\n    i0.ɵɵtemplate(2, HomeComponent_table_1_th_2_Template, 2, 0, \"th\", 5);\n    i0.ɵɵtemplate(3, HomeComponent_table_1_td_3_Template, 2, 1, \"td\", 6);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementContainerStart(4, 7);\n    i0.ɵɵtemplate(5, HomeComponent_table_1_th_5_Template, 2, 0, \"th\", 5);\n    i0.ɵɵtemplate(6, HomeComponent_table_1_td_6_Template, 2, 1, \"td\", 6);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵtemplate(7, HomeComponent_table_1_tr_7_Template, 1, 0, \"tr\", 8);\n    i0.ɵɵtemplate(8, HomeComponent_table_1_tr_8_Template, 1, 0, \"tr\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"dataSource\", ctx_r1.dataSource);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"matHeaderRowDef\", ctx_r1.displayedColumns);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"matRowDefColumns\", ctx_r1.displayedColumns);\n  }\n}\n\nexport var HomeComponent = /*#__PURE__*/(function () {\n  var HomeComponent = /*#__PURE__*/function () {\n    function HomeComponent(authService, msalBroadcastService) {\n      _classCallCheck(this, HomeComponent);\n\n      this.authService = authService;\n      this.msalBroadcastService = msalBroadcastService;\n      this.loginDisplay = false;\n      this.displayedColumns = ['claim', 'value'];\n      this.dataSource = [];\n      this._destroying$ = new Subject();\n    }\n\n    _createClass(HomeComponent, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        var _this = this;\n\n        this.msalBroadcastService.msalSubject$.pipe(filter(function (msg) {\n          return msg.eventType === EventType.LOGIN_SUCCESS;\n        }), takeUntil(this._destroying$)).subscribe(function (result) {\n          console.log(result);\n          var payload = result.payload;\n\n          _this.authService.instance.setActiveAccount(payload.account);\n        });\n        this.msalBroadcastService.inProgress$.pipe(filter(function (status) {\n          return status === InteractionStatus.None;\n        })).subscribe(function () {\n          var _a;\n\n          _this.setLoginDisplay();\n\n          _this.checkAndSetActiveAccount();\n\n          _this.getClaims((_a = _this.authService.instance.getActiveAccount()) === null || _a === void 0 ? void 0 : _a.idTokenClaims);\n        });\n      }\n    }, {\n      key: \"checkAndSetActiveAccount\",\n      value: function checkAndSetActiveAccount() {\n        /**\r\n         * If no active account set but there are accounts signed in, sets first account to active account\r\n         * To use active account set here, subscribe to inProgress$ first in your component\r\n         * Note: Basic usage demonstrated. Your app may require more complicated account selection logic\r\n         */\n        var activeAccount = this.authService.instance.getActiveAccount();\n\n        if (!activeAccount && this.authService.instance.getAllAccounts().length > 0) {\n          var accounts = this.authService.instance.getAllAccounts();\n          this.authService.instance.setActiveAccount(accounts[0]);\n        }\n      }\n    }, {\n      key: \"setLoginDisplay\",\n      value: function setLoginDisplay() {\n        this.loginDisplay = this.authService.instance.getAllAccounts().length > 0;\n      }\n    }, {\n      key: \"getClaims\",\n      value: function getClaims(claims) {\n        this.dataSource = [{\n          id: 1,\n          claim: \"Display Name\",\n          value: claims ? claims['name'] : null\n        }, {\n          id: 2,\n          claim: \"Object ID\",\n          value: claims ? claims['oid'] : null\n        }, {\n          id: 3,\n          claim: \"Job Title\",\n          value: claims ? claims['jobTitle'] : null\n        }, {\n          id: 4,\n          claim: \"City\",\n          value: claims ? claims['city'] : null\n        }];\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        this._destroying$.next(undefined);\n\n        this._destroying$.complete();\n      }\n    }]);\n\n    return HomeComponent;\n  }();\n\n  HomeComponent.ɵfac = function HomeComponent_Factory(t) {\n    return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.MsalService), i0.ɵɵdirectiveInject(i1.MsalBroadcastService));\n  };\n\n  HomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HomeComponent,\n    selectors: [[\"app-home\"]],\n    decls: 2,\n    vars: 2,\n    consts: [[\"class\", \"card-section\", 4, \"ngIf\"], [\"mat-table\", \"\", \"class\", \"mat-elevation-z8\", 3, \"dataSource\", 4, \"ngIf\"], [1, \"card-section\"], [\"mat-table\", \"\", 1, \"mat-elevation-z8\", 3, \"dataSource\"], [\"matColumnDef\", \"claim\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"matColumnDef\", \"value\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\"]],\n    template: function HomeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, HomeComponent_mat_card_0_Template, 7, 0, \"mat-card\", 0);\n        i0.ɵɵtemplate(1, HomeComponent_table_1_Template, 9, 3, \"table\", 1);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", !ctx.loginDisplay);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loginDisplay);\n      }\n    },\n    directives: [i2.NgIf, i3.MatCard, i3.MatCardTitle, i3.MatCardSubtitle, i3.MatCardContent, i4.MatTable, i4.MatColumnDef, i4.MatHeaderCellDef, i4.MatHeaderCell, i4.MatCellDef, i4.MatCell, i4.MatHeaderRowDef, i4.MatHeaderRow, i4.MatRowDef, i4.MatRow],\n    styles: [\"table[_ngcontent-%COMP%]{width:70%;margin:3% auto auto}.card-section[_ngcontent-%COMP%]{margin:10%;padding:5%}\"]\n  });\n  return HomeComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}