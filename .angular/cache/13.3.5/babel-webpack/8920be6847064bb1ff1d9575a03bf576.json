{"ast":null,"code":"import _classCallCheck from \"D:\\\\Git\\\\ANGULAR\\\\B2C\\\\POC\\\\2-call-api-b2c\\\\SPA\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"D:\\\\Git\\\\ANGULAR\\\\B2C\\\\POC\\\\2-call-api-b2c\\\\SPA\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport var MsalConfService = /*#__PURE__*/(function () {\n  var MsalConfService = /*#__PURE__*/function () {\n    function MsalConfService(httpHandler) {\n      _classCallCheck(this, MsalConfService);\n\n      this.httpHandler = httpHandler;\n      this.http = new HttpClient(httpHandler);\n    }\n\n    _createClass(MsalConfService, [{\n      key: \"init\",\n      value: function init(endpoint) {\n        var _this = this;\n\n        return new Promise(function (resolve, reject) {\n          _this.http.get(endpoint).pipe(map(function (result) {\n            return result;\n          })).subscribe(function (value) {\n            _this.settings = value;\n            resolve(true);\n          }, function (error) {\n            reject(error);\n          });\n        });\n      }\n    }, {\n      key: \"getSettings\",\n      value: function getSettings(key) {\n        if (!key || Array.isArray(key) && !key[0]) {\n          return this.settings;\n        }\n\n        if (!Array.isArray(key)) {\n          key = key.split('.');\n        }\n\n        var result = key.reduce(function (account, current) {\n          return account && account[current];\n        }, this.settings);\n        return result;\n      }\n    }]);\n\n    return MsalConfService;\n  }();\n\n  MsalConfService.ɵfac = function MsalConfService_Factory(t) {\n    return new (t || MsalConfService)(i0.ɵɵinject(i1.HttpBackend));\n  };\n\n  MsalConfService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MsalConfService,\n    factory: MsalConfService.ɵfac,\n    providedIn: 'root'\n  });\n  return MsalConfService;\n})();","map":null,"metadata":{},"sourceType":"module"}